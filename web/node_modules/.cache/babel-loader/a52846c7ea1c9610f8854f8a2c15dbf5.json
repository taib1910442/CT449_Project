{"ast":null,"code":"import { createStore } from \"vuex\";\nexport default createStore({\n  state() {\n    return {\n      messages: [],\n      contacts: [],\n      groups: [],\n      groupMessages: [],\n      unreadNotifications: 0,\n      notifications: [],\n      user: null\n    };\n  },\n\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n\n    setNotifications(state, notifications) {\n      state.notifications = notifications;\n    },\n\n    setUnreadNotifications(state, unreadNotifications) {\n      state.unreadNotifications = unreadNotifications;\n    },\n\n    appendMessage(state, newMessage) {\n      state.messages.push(newMessage);\n    },\n\n    prependMessage(state, newMessage) {\n      state.messages.unshift(newMessage);\n    },\n\n    setMessages(state, newMessages) {\n      state.messages = newMessages;\n    },\n\n    setContacts(state, newContacts) {\n      state.contacts = newContacts;\n    }\n\n  },\n  getters: {\n    getUser(state) {\n      return state.user;\n    },\n\n    getNotifications(state) {\n      return state.notifications;\n    },\n\n    getUnreadNotifications(state) {\n      return state.unreadNotifications;\n    },\n\n    // get the state groups\n    getGroups(state) {\n      return state.groups;\n    },\n\n    getMessages(state) {\n      return state.messages;\n    },\n\n    getContacts(state) {\n      return state.contacts;\n    }\n\n  }\n});","map":{"version":3,"sources":["D:/Download/Compressed/chat/web/src/vuex/store.js"],"names":["createStore","state","messages","contacts","groups","groupMessages","unreadNotifications","notifications","user","mutations","setUser","setNotifications","setUnreadNotifications","appendMessage","newMessage","push","prependMessage","unshift","setMessages","newMessages","setContacts","newContacts","getters","getUser","getNotifications","getUnreadNotifications","getGroups","getMessages","getContacts"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;AACvBC,EAAAA,KAAK,GAAG;AACJ,WAAO;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,QAAQ,EAAE,EAFP;AAIHC,MAAAA,MAAM,EAAE,EAJL;AAMHC,MAAAA,aAAa,EAAE,EANZ;AAQHC,MAAAA,mBAAmB,EAAE,CARlB;AASHC,MAAAA,aAAa,EAAE,EATZ;AAWHC,MAAAA,IAAI,EAAE;AAXH,KAAP;AAaH,GAfsB;;AAiBvBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,CAAET,KAAF,EAASO,IAAT,EAAe;AAClBP,MAAAA,KAAK,CAACO,IAAN,GAAaA,IAAb;AACH,KAHM;;AAKPG,IAAAA,gBAAgB,CAAEV,KAAF,EAASM,aAAT,EAAwB;AACpCN,MAAAA,KAAK,CAACM,aAAN,GAAsBA,aAAtB;AACH,KAPM;;AASPK,IAAAA,sBAAsB,CAAEX,KAAF,EAASK,mBAAT,EAA8B;AAChDL,MAAAA,KAAK,CAACK,mBAAN,GAA4BA,mBAA5B;AACH,KAXM;;AAaPO,IAAAA,aAAa,CAAEZ,KAAF,EAASa,UAAT,EAAqB;AAC9Bb,MAAAA,KAAK,CAACC,QAAN,CAAea,IAAf,CAAoBD,UAApB;AACH,KAfM;;AAiBPE,IAAAA,cAAc,CAAEf,KAAF,EAASa,UAAT,EAAqB;AAC/Bb,MAAAA,KAAK,CAACC,QAAN,CAAee,OAAf,CAAuBH,UAAvB;AACH,KAnBM;;AAqBPI,IAAAA,WAAW,CAAEjB,KAAF,EAASkB,WAAT,EAAsB;AAC7BlB,MAAAA,KAAK,CAACC,QAAN,GAAiBiB,WAAjB;AACH,KAvBM;;AAyBPC,IAAAA,WAAW,CAAEnB,KAAF,EAASoB,WAAT,EAAsB;AAC7BpB,MAAAA,KAAK,CAACE,QAAN,GAAiBkB,WAAjB;AACH;;AA3BM,GAjBY;AA+CvBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,CAAEtB,KAAF,EAAS;AACZ,aAAOA,KAAK,CAACO,IAAb;AACH,KAHI;;AAMLgB,IAAAA,gBAAgB,CAAEvB,KAAF,EAAS;AACrB,aAAOA,KAAK,CAACM,aAAb;AACH,KARI;;AAULkB,IAAAA,sBAAsB,CAAExB,KAAF,EAAS;AAC3B,aAAOA,KAAK,CAACK,mBAAb;AACH,KAZI;;AAcL;AACAoB,IAAAA,SAAS,CAAEzB,KAAF,EAAS;AACd,aAAOA,KAAK,CAACG,MAAb;AACH,KAjBI;;AAmBLuB,IAAAA,WAAW,CAAE1B,KAAF,EAAS;AAChB,aAAOA,KAAK,CAACC,QAAb;AACH,KArBI;;AAuBL0B,IAAAA,WAAW,CAAE3B,KAAF,EAAS;AAChB,aAAOA,KAAK,CAACE,QAAb;AACH;;AAzBI;AA/Cc,CAAD,CAA1B","sourcesContent":["import { createStore } from \"vuex\"\n\nexport default createStore({\n    state() {\n        return {\n            messages: [],\n            contacts: [],\n\n            groups: [],\n\n            groupMessages: [],\n\n            unreadNotifications: 0,\n            notifications: [],\n\n            user: null\n        }\n    },\n\n    mutations: {\n        setUser (state, user) {\n            state.user = user\n        },\n\n        setNotifications (state, notifications) {\n            state.notifications = notifications\n        },\n\n        setUnreadNotifications (state, unreadNotifications) {\n            state.unreadNotifications = unreadNotifications\n        },\n\n        appendMessage (state, newMessage) {\n            state.messages.push(newMessage)\n        },\n\n        prependMessage (state, newMessage) {\n            state.messages.unshift(newMessage)\n        },\n\n        setMessages (state, newMessages) {\n            state.messages = newMessages\n        },\n\n        setContacts (state, newContacts) {\n            state.contacts = newContacts\n        }\n    },\n\n    getters: {\n        getUser (state) {\n            return state.user\n        },\n        \n        \n        getNotifications (state) {\n            return state.notifications\n        },\n\n        getUnreadNotifications (state) {\n            return state.unreadNotifications\n        },\n\n        // get the state groups\n        getGroups (state) {\n            return state.groups\n        },\n\n        getMessages (state) {\n            return state.messages\n        },\n\n        getContacts (state) {\n            return state.contacts\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}