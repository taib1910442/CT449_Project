{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport store from \"../vuex/store\";\nimport \"../../public/assets/css/chat.css\";\nexport default {\n  data() {\n    return {\n      _id: \"\",\n      name: \"\",\n      message: \"\",\n      page: 0,\n      receiver: null,\n      btnLoadMoreClass: \"fa fa-repeat\",\n      hasMoreMessages: true,\n      selectedMessageId: 0,\n      selectedMessageText: \"\",\n      password: \"\",\n      searchContact: \"\"\n    };\n  },\n\n  computed: {\n    contacts() {\n      return store.getters.getContacts;\n    },\n\n    messages() {\n      return store.getters.getMessages;\n    }\n\n  },\n  methods: {\n    onSearchKeyPress: function () {\n      if (event.key == \"Enter\") {\n        this.doSearchContact();\n      }\n    },\n    onSearchKeyUp: function () {\n      this.doSearchContact();\n    },\n    showContactOptions: function () {\n      var menu = document.getElementById(\"contextMenuContactOptions\");\n      menu.style.display = 'block';\n      menu.style.left = event.pageX + \"px\";\n      menu.style.top = event.pageY + \"px\";\n    },\n    copyMessage: function () {\n      navigator.clipboard.writeText(this.selectedMessageText);\n    },\n    showMoreOptions: function (msg) {\n      const isMyMessage = event.target.getAttribute(\"is-my-message\");\n      this.selectedMessageId = msg._id;\n      this.selectedMessageText = msg.message;\n      var menu = document.getElementById(\"contextMenu\");\n      menu.style.display = 'block';\n\n      if (isMyMessage == \"true\") {\n        menu.style.left = event.pageX - 200 + \"px\";\n      } else {\n        menu.style.left = event.pageX + \"px\";\n      }\n\n      menu.style.top = event.pageY + \"px\";\n      document.querySelector(\".bookmark i\").className = \"fa fa-bookmark-o\";\n\n      if (msg.bookmarkBy) {\n        document.querySelector(\".bookmark i\").className = \"fa fa-bookmark\";\n      }\n    },\n    attachEventListeners: function () {\n      const self = this;\n      document.addEventListener('click', function (e) {\n        const moreOptions = document.querySelectorAll(\".more-options\");\n        let isClickedMoreOptions = true;\n\n        for (let a = 0; a < moreOptions.length; a++) {\n          if (moreOptions[a].contains(e.target)) {\n            // Clicked in box\n            isClickedMoreOptions = true;\n            break;\n          } else {\n            // Clicked outside the box\n            isClickedMoreOptions = false;\n          }\n        }\n\n        if (!isClickedMoreOptions) {\n          document.getElementById(\"contextMenu\").style.display = \"none\";\n          document.getElementById(\"contextMenuContactOptions\").style.display = \"none\";\n        }\n      });\n    },\n    getChatPersonPicture: function (user) {\n      if (typeof user.picture !== \"undefined\" && user.picture != \"\") {\n        return this.$apiURL + \"/\" + user.picture;\n      }\n\n      return \"../../assets/img/avatar2.png\";\n    },\n    getPicture: function (user) {\n      if (typeof user.picture !== \"undefined\") {\n        return this.$apiURL + \"/\" + user.picture;\n      }\n\n      return \"../../assets/img/avatar7.png\";\n    },\n    doSearchContact: async function () {\n      const formData = new FormData();\n      formData.append(\"searchContact\", this.searchContact);\n      const response = await axios.post(this.$apiURL + \"/contact/search\", formData, {\n        headers: this.$headers\n      });\n\n      if (response.data.status == \"success\") {\n        store.commit(\"setContacts\", response.data.data);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    doSearch: async function () {\n      const form = event.target;\n      const formData = new FormData(form);\n      formData.append(\"email\", this.email);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/search\", formData, {\n        headers: this.$headers\n      });\n\n      if (response.data.status == \"success\") {\n        store.commit(\"setMessages\", []);\n\n        for (let a = 0; a < response.data.data.length; a++) {\n          store.commit(\"prependMessage\", response.data.data[a]);\n        }\n\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    getMessageTime: function (time) {\n      const dateObj = new Date(time);\n      let timeStr = dateObj.getDate() + \" \" + this.$months[dateObj.getMonth()] + \", \" + dateObj.getFullYear() + \" \" + dateObj.getHours() + \":\" + dateObj.getMinutes() + \":\" + dateObj.getSeconds();\n      return timeStr;\n    },\n    loadMore: function () {\n      this.btnLoadMoreClass = \"fa fa-spinner fa-spin\";\n      this.page++;\n      this.getData();\n    },\n    sendMessage: async function () {\n      const formData = new FormData();\n      formData.append(\"_id\", this._id);\n      formData.append(\"message\", this.message);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/send\", formData, {\n        headers: this.$headers\n      });\n\n      if (response.data.status == \"success\") {\n        this.message = \"\";\n        store.commit(\"appendMessage\", response.data.messageObject);\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    deleteContact: async function () {\n      const self = this;\n      swal.fire({\n        title: 'Are you sure?',\n        text: \"This will be removed from your contact\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(async function (result) {\n        if (result.isConfirmed) {\n          self.isDeleting = true;\n          const formData = new FormData();\n          formData.append(\"_id\", self._id);\n          const response = await axios.post(self.$apiURL + \"/contact/delete\", formData, {\n            headers: self.$headers\n          });\n          self.isDeleting = false;\n\n          if (response.data.status == \"success\") {\n            swal.fire('Deleted!', response.data.message, 'success');\n            const contactsArr = self.contacts;\n\n            for (let a = 0; a < contactsArr.length; a++) {\n              if (contactsArr[a]._id == self._id) {\n                contactsArr.splice(a, 1);\n                break;\n              }\n            }\n\n            self.contacts = contactsArr;\n            store.commit(\"setMessages\", []);\n            self.totalMessages = 0;\n            self.name = \"\";\n            self._id = \"\";\n          } else {\n            swal.fire(\"Error\", response.data.message, \"error\");\n          }\n        }\n      });\n    },\n    onChatSelected: function () {\n      const self = this;\n      store.commit(\"setMessages\", []);\n      this._id = event.target.getAttribute(\"data-id\");\n      this.name = event.target.getAttribute(\"data-name\");\n      this.getChat();\n    },\n    getChat: async function () {\n      const self = this;\n      const formData = new FormData();\n      formData.append(\"_id\", this._id);\n      formData.append(\"page\", this.page);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/fetch\", formData, {\n        headers: this.$headers\n      });\n      this.btnLoadMoreClass = \"fa fa-repeat\";\n\n      if (response.data.status == \"success\") {\n        this.totalMessages = response.data.totalMessages;\n\n        for (let a = 0; a < response.data.messages.length; a++) {\n          store.commit(\"prependMessage\", response.data.messages[a]);\n        }\n\n        this.hasMoreMessages = response.data.messages.length == 0 ? false : true;\n        this.receiver = response.data.receiver;\n        this.user = response.data.user;\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    getData: async function () {\n      const self = this;\n      const response = await axios.post(this.$apiURL + \"/contact/fetch\", null, {\n        headers: this.$headers\n      });\n\n      if (response.data.status == \"success\") {\n        store.commit(\"setContacts\", response.data.contacts);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    }\n  },\n  mounted: function () {\n    this.getData();\n  },\n  watch: {\n    $route: function (to, from) {\n      store.commit(\"setMessages\", []);\n      store.commit(\"setContacts\", []);\n      this._id = \"\";\n      this.name = \"\";\n      this.isArchive = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","swal","store","data","_id","name","message","page","receiver","btnLoadMoreClass","hasMoreMessages","selectedMessageId","selectedMessageText","password","searchContact","computed","contacts","getters","getContacts","messages","getMessages","methods","onSearchKeyPress","event","key","doSearchContact","onSearchKeyUp","showContactOptions","menu","document","getElementById","style","display","left","pageX","top","pageY","copyMessage","navigator","clipboard","writeText","showMoreOptions","msg","isMyMessage","target","getAttribute","querySelector","className","bookmarkBy","attachEventListeners","self","addEventListener","e","moreOptions","querySelectorAll","isClickedMoreOptions","a","length","contains","getChatPersonPicture","user","picture","$apiURL","getPicture","formData","FormData","append","response","post","headers","$headers","status","commit","fire","doSearch","form","email","getMessageTime","time","dateObj","Date","timeStr","getDate","$months","getMonth","getFullYear","getHours","getMinutes","getSeconds","loadMore","getData","sendMessage","messageObject","deleteContact","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","isDeleting","contactsArr","splice","totalMessages","onChatSelected","getChat","mounted","watch","$route","to","from","isArchive"],"sourceRoot":"","sources":["D:\\Download\\Compressed\\chat\\web\\src\\components\\HomeComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\" id=\"home-page\" style=\"padding-top: 50px; padding-bottom: 50px;\">\n        <div class=\"row\" style=\"margin-bottom: 50px;\">\n            <div class=\"offset-md-10 col-md-2\">\n                <router-link class=\"btn btn-primary\" to=\"/contacts/add\">Add Contact</router-link>\n            </div>\n        </div>\n\n        <div class=\"container-fluid h-100\">\n            <div class=\"row justify-content-center h-100\">\n                <div class=\"col-md-4 col-xl-3 chat\"><div class=\"card mb-sm-3 mb-md-0 contacts_card\">\n                    <div class=\"card-header\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" placeholder=\"Search...\" class=\"form-control search\" v-model=\"searchContact\" v-on:keypress=\"onSearchKeyPress\" v-on:keyup=\"onSearchKeyUp\" />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text search_btn\"><i class=\"fa fa-search\" v-on:click=\"doSearchContact\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-body contacts_body\">\n                        <ul class=\"contacts\">\n                            <li v-for=\"contact in contacts\" v-bind:key=\"contact._id\" v-bind:class=\"contact._id == _id ? 'active' : ''\">\n                                <div class=\"d-flex bd-highlight\">\n                                    <div class=\"user_info\">\n                                        <span v-text=\"contact.name\" style=\"cursor: pointer;\" v-bind:data-id=\"contact._id\" v-bind:data-name=\"contact.name\" v-bind:data-is-archive=\"contact.isArchive\" v-on:click=\"onChatSelected\"></span>\n                                        <p v-if=\"(contact.unreadMessages > 0)\" v-text=\"' (' + contact.unreadMessages + ')'\" class=\"text-danger\"></p>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"card-footer\"></div>\n                </div></div>\n                <div class=\"col-md-8 col-xl-6 chat\">\n                    <div class=\"card\">\n                        <div class=\"card-header msg_head\">\n                            <div class=\"d-flex bd-highlight\">\n                                <div class=\"user_info\">\n                                    <span>Chat with <span v-text=\"name\"></span></span>\n                                    <p><span v-text=\"totalMessages\" style=\"font-size: 10px; color: rgba(255,255,255,0.6);\"></span> Messages</p>\n                                </div>\n                            </div>\n\n                            <span id=\"action_menu_btn\" class=\"more-options\" v-on:click=\"showContactOptions\"></span>\n                        </div>\n                        <div class=\"card-body msg_card_body\">\n\n                            <div v-for=\"msg in messages\" v-bind:key=\"msg._id\">\n\n                                <template v-if=\"user != null && user.email == msg.sender.email\">\n                                    <div class=\"d-flex justify-content-end mb-4\">\n                                        <div class=\"msg_cotainer_send\">\n                                            <template class=\"more-options\" v-on:click=\"showMoreOptions(msg)\" v-bind:is-my-message=\"true\">\n                                                <span v-text=\"msg.message\"></span>\n                                            </template>\n\n                                            <p class=\"msg_time message-data-time\" v-text=\"getMessageTime(msg.createdAt)\"></p>\n                                        </div>\n\n                                        <div class=\"img_cont_msg\">\n                                            <img v-bind:src=\"getPicture(msg.sender)\" class=\"rounded-circle user_img_msg\" />\n                                        </div>\n                                    </div>\n                                </template>\n\n                                <template v-else>\n                                    <div class=\"d-flex justify-content-start mb-4\">\n                                        <div class=\"img_cont_msg\">\n                                            <img v-bind:src=\"getPicture(msg.sender)\" class=\"rounded-circle user_img_msg\" />\n                                        </div>\n\n                                        <div class=\"msg_cotainer\">\n                                            <template class=\"more-options\" v-on:click=\"showMoreOptions(msg)\" v-bind:is-my-message=\"false\">\n                                                <span v-text=\"msg.message\"></span>\n                                            </template>\n\n                                            <p class=\"msg_time message-data-time\" v-text=\"getMessageTime(msg.createdAt)\"></p>\n                                        </div>\n                                    </div>\n                                </template>\n                            </div>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"input-group\">\n                                <textarea v-model=\"message\" class=\"form-control type_msg\" placeholder=\"Type your message...\"></textarea>\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text send_btn\"><i class=\"fa fa-location-arrow\" v-on:click=\"sendMessage\"></i></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"contextMenuContactOptions\" class=\"context-menu\" style=\"display: none\"> \n        <ul class=\"menu\">\n            <li><a href=\"javascript:void(0)\" v-on:click=\"deleteContact\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete</a></li>\n        </ul>\n    </div>\n\n    <div id=\"contextMenu\" class=\"context-menu\" style=\"display: none\"> \n        <ul class=\"menu\">\n            <li class=\"copy\"><a href=\"javascript:void(0)\" v-on:click=\"copyMessage\"><i class=\"fa fa-copy\" aria-hidden=\"true\"></i> Copy</a></li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n    import store from \"../vuex/store\"\n\n    import \"../../public/assets/css/chat.css\"\n    \n    export default {\n\n        data() {\n            return {\n                _id: \"\",\n                name: \"\",\n                message: \"\",\n                page: 0,\n                receiver: null,\n                btnLoadMoreClass: \"fa fa-repeat\",\n                hasMoreMessages: true,\n                selectedMessageId: 0,\n                selectedMessageText: \"\",\n                password: \"\",\n                searchContact: \"\"\n            }\n        },\n\n        computed: {\n            contacts() {\n                return store.getters.getContacts\n            },\n\n            messages() {\n                return store.getters.getMessages\n            }\n        },\n\n        methods: {\n            onSearchKeyPress: function () {\n                if (event.key == \"Enter\") {\n                    this.doSearchContact()\n                }\n            },\n\n            onSearchKeyUp: function () {\n                this.doSearchContact()\n            },\n            \n            showContactOptions: function () {\n                var menu = document.getElementById(\"contextMenuContactOptions\")\n                menu.style.display = 'block'\n                menu.style.left = event.pageX + \"px\"\n                menu.style.top = event.pageY + \"px\"\n            },\n\n            copyMessage: function() {\n                navigator.clipboard.writeText(this.selectedMessageText)\n            },\n\n            showMoreOptions: function (msg) {\n                const isMyMessage = event.target.getAttribute(\"is-my-message\")\n                this.selectedMessageId = msg._id\n                this.selectedMessageText = msg.message\n                \n                var menu = document.getElementById(\"contextMenu\")\n                menu.style.display = 'block'\n                if (isMyMessage == \"true\") {\n                    menu.style.left = (event.pageX - 200) + \"px\"\n                } else {\n                    menu.style.left = event.pageX + \"px\"\n                }\n                menu.style.top = event.pageY + \"px\"\n\n                document.querySelector(\".bookmark i\").className = \"fa fa-bookmark-o\"\n\n                if (msg.bookmarkBy) {\n                    document.querySelector(\".bookmark i\").className = \"fa fa-bookmark\"\n                }\n            },\n\n            attachEventListeners: function() {\n                const self = this\n\n                document.addEventListener('click', function(e) {\n                    const moreOptions = document.querySelectorAll(\".more-options\")\n                    let isClickedMoreOptions = true\n                    for (let a = 0; a < moreOptions.length; a++) {\n                        if (moreOptions[a].contains(e.target)) {\n                            // Clicked in box\n                            isClickedMoreOptions = true\n                            break\n                        } else {\n                            // Clicked outside the box\n                            isClickedMoreOptions = false\n                        }\n                    }\n                    if (!isClickedMoreOptions) {\n                        document.getElementById(\"contextMenu\").style.display = \"none\"\n                        document.getElementById(\"contextMenuContactOptions\").style.display = \"none\"\n                    }\n                })\n            },\n\n            getChatPersonPicture: function (user) {\n                if (typeof user.picture !== \"undefined\" && user.picture != \"\") {\n                    return this.$apiURL + \"/\" + user.picture\n                }\n                return \"../../assets/img/avatar2.png\"\n            },\n\n            getPicture: function (user) {\n                if (typeof user.picture !== \"undefined\") {\n                    return this.$apiURL + \"/\" + user.picture\n                }\n                return \"../../assets/img/avatar7.png\"\n            },\n\n            doSearchContact: async function () {\n                const formData = new FormData()\n                formData.append(\"searchContact\", this.searchContact)\n                \n                const response = await axios.post(\n                    this.$apiURL + \"/contact/search\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setContacts\", response.data.data)\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            doSearch: async function () {\n                const form = event.target\n                const formData = new FormData(form)\n                formData.append(\"email\", this.email)\n                formData.append(\"password\", this.password)\n                \n                const response = await axios.post(\n                    this.$apiURL + \"/chat/search\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setMessages\", [])\n                    for (let a = 0; a < response.data.data.length; a++) {\n                        store.commit(\"prependMessage\", response.data.data[a])\n                    }\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            getMessageTime: function (time) {\n                const dateObj = new Date(time)\n                let timeStr = dateObj.getDate() + \" \" + this.$months[dateObj.getMonth()] + \", \" + dateObj.getFullYear() + \" \" + dateObj.getHours() + \":\" + dateObj.getMinutes() + \":\" + dateObj.getSeconds()\n                return timeStr\n            },\n\n            loadMore: function () {\n                this.btnLoadMoreClass = \"fa fa-spinner fa-spin\"\n                this.page++\n                this.getData()\n            },\n            \n            sendMessage: async function () {\n\n                const formData = new FormData()\n                formData.append(\"_id\", this._id)\n                formData.append(\"message\", this.message)\n                formData.append(\"password\", this.password)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/chat/send\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    this.message = \"\"\n\n                    store.commit(\"appendMessage\", response.data.messageObject)\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            deleteContact: async function () {\n                const self = this\n\n                swal.fire({\n                    title: 'Are you sure?',\n                    text: \"This will be removed from your contact\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, delete it!'\n                }).then(async function(result) {\n                    if (result.isConfirmed) {\n\n                        self.isDeleting = true;\n                        const formData = new FormData()\n                        formData.append(\"_id\", self._id)\n\n                        const response = await axios.post(\n                            self.$apiURL + \"/contact/delete\",\n                            formData,\n                            {\n                                headers: self.$headers\n                            }\n                        )\n                        self.isDeleting = false\n\n                        if (response.data.status == \"success\") {\n                            swal.fire(\n                                'Deleted!',\n                                response.data.message,\n                                'success'\n                            );\n\n                            const contactsArr = self.contacts;\n                            for (let a = 0; a < contactsArr.length; a++) {\n                                if (contactsArr[a]._id == self._id) {\n                                    contactsArr.splice(a, 1);\n                                    break;\n                                }\n                            }\n                            self.contacts = contactsArr\n\n                            store.commit(\"setMessages\", [])\n                            self.totalMessages = 0\n                            self.name = \"\"\n                            self._id = \"\"\n                        } else {\n                            swal.fire(\"Error\", response.data.message, \"error\");\n                        }\n                    }\n                })\n            },\n\n            onChatSelected: function () {\n                const self = this\n                store.commit(\"setMessages\", [])\n                this._id = event.target.getAttribute(\"data-id\")\n                this.name = event.target.getAttribute(\"data-name\")\n\n                this.getChat()\n            },\n\n            getChat: async function () {\n                const self = this\n                \n                const formData = new FormData()\n                formData.append(\"_id\", this._id)\n                formData.append(\"page\", this.page)\n                formData.append(\"password\", this.password)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/chat/fetch\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                this.btnLoadMoreClass = \"fa fa-repeat\"\n\n                if (response.data.status == \"success\") {\n\n                    this.totalMessages = response.data.totalMessages\n\n                    for (let a = 0; a < response.data.messages.length; a++) {\n                        store.commit(\"prependMessage\", response.data.messages[a])\n                    }\n                    this.hasMoreMessages = (response.data.messages.length == 0) ? false : true\n                    this.receiver = response.data.receiver\n                    this.user = response.data.user\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            getData: async function () {\n                const self = this\n\n                const response = await axios.post(\n                    this.$apiURL + \"/contact/fetch\",\n                    null,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setContacts\", response.data.contacts)\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\");\n                }\n            }\n        },\n\n        mounted: function () {\n            this.getData()\n        },\n\n        watch: {\n            $route: function (to, from) {\n                store.commit(\"setMessages\", [])\n                store.commit(\"setContacts\", [])\n                this._id = \"\"\n                this.name = \"\"\n                this.isArchive = false\n            }\n        }\n    }\n</script>\n\n<style>\n    #home-page {\n            height: 100%;\n            margin: 0;\n            background: #7F7FD5;\n           background: -webkit-linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);\n            background: linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);\n        }\n\n        .chat{\n            margin-top: auto;\n            margin-bottom: auto;\n        }\n        .card{\n            height: 500px;\n            border-radius: 15px !important;\n            background-color: rgba(0,0,0,0.4) !important;\n        }\n        .contacts_body{\n            padding:  0.75rem 0 !important;\n            overflow-y: auto;\n            white-space: nowrap;\n        }\n        .msg_card_body{\n            overflow-y: auto;\n        }\n        .card-header{\n            border-radius: 15px 15px 0 0 !important;\n            border-bottom: 0 !important;\n        }\n     .card-footer{\n        border-radius: 0 0 15px 15px !important;\n            border-top: 0 !important;\n            background-color: transparent !important;\n    }\n        .container{\n            align-content: center;\n        }\n        .search{\n            border-radius: 15px 0 0 15px !important;\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color:white !important;\n        }\n        .search:focus{\n             box-shadow:none !important;\n           outline:0px !important;\n        }\n        .type_msg{\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color:white !important;\n            height: 60px !important;\n            overflow-y: auto;\n        }\n            .type_msg:focus{\n             box-shadow:none !important;\n           outline:0px !important;\n        }\n        .attach_btn{\n    border-radius: 15px 0 0 15px !important;\n    background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .send_btn{\n    border-radius: 0 15px 15px 0 !important;\n    background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .search_btn{\n            border-radius: 0 15px 15px 0 !important;\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .contacts{\n            list-style: none;\n            padding: 0;\n        }\n        .contacts li{\n            width: 100% !important;\n            padding: 5px 10px;\n            margin-bottom: 15px !important;\n        }\n    .active{\n            background-color: rgba(0,0,0,0.3);\n    }\n        .user_img{\n            height: 70px;\n            width: 70px;\n            border:1.5px solid #f5f6fa;\n        \n        }\n        .user_img_msg{\n            height: 40px;\n            width: 40px;\n            border:1.5px solid #f5f6fa;\n        \n        }\n    .img_cont{\n            position: relative;\n            height: 70px;\n            width: 70px;\n    }\n    .img_cont_msg{\n            height: 40px;\n            width: 40px;\n    }\n    .online_icon{\n        position: absolute;\n        height: 15px;\n        width:15px;\n        background-color: #4cd137;\n        border-radius: 50%;\n        bottom: 0.2em;\n        right: 0.4em;\n        border:1.5px solid white;\n    }\n    .offline{\n        background-color: #c23616 !important;\n    }\n    .user_info{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-left: 15px;\n    }\n    .user_info span{\n        font-size: 20px;\n        color: white;\n    }\n    .user_info p{\n    font-size: 10px;\n    color: rgba(255,255,255,0.6);\n    }\n    .video_cam{\n        margin-left: 50px;\n        margin-top: 5px;\n    }\n    .video_cam span{\n        color: white;\n        font-size: 20px;\n        cursor: pointer;\n        margin-right: 20px;\n    }\n    .msg_cotainer{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-left: 10px;\n        border-radius: 25px;\n        background-color: #82ccdd;\n        padding: 10px;\n        position: relative;\n    }\n    .msg_cotainer_send{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-right: 10px;\n        border-radius: 25px;\n        background-color: #78e08f;\n        padding: 10px;\n        position: relative;\n    }\n    .msg_time{\n        /*position: absolute;\n        left: 0;\n        bottom: -15px;\n        color: rgba(255,255,255,0.5);*/\n        font-size: 10px;\n        margin-bottom: 0px;\n        margin-top: 10px;\n    }\n    .msg_time_send{\n        position: absolute;\n        right:0;\n        bottom: -15px;\n        color: rgba(255,255,255,0.5);\n        font-size: 10px;\n    }\n    .msg_head{\n        position: relative;\n    }\n    #action_menu_btn{\n        position: absolute;\n        right: 10px;\n        top: 10px;\n        color: white;\n        cursor: pointer;\n        font-size: 20px;\n    }\n    .action_menu{\n        z-index: 1;\n        position: absolute;\n        padding: 15px 0;\n        background-color: rgba(0,0,0,0.5);\n        color: white;\n        border-radius: 15px;\n        top: 30px;\n        right: 15px;\n        display: none;\n    }\n    .action_menu ul{\n        list-style: none;\n        padding: 0;\n    margin: 0;\n    }\n    .action_menu ul li{\n        width: 100%;\n        padding: 10px 15px;\n        margin-bottom: 5px;\n    }\n    .action_menu ul li i{\n        padding-right: 10px;\n    \n    }\n    .action_menu ul li:hover{\n        cursor: pointer;\n        background-color: rgba(0,0,0,0.2);\n    }\n    @media(max-width: 576px){\n    .contacts_card{\n        margin-bottom: 15px !important;\n    }\n    }\n</style>"]},"metadata":{},"sourceType":"module"}