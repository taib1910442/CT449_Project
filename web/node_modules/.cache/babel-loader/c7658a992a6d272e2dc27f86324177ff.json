{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\",\n  style: {\n    \"margin-top\": \"50px\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-md-12\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Notifications\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_5 = {\n  class: \"table table-hover\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Type\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [\"textContent\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Â  \");\n\nconst _hoisted_9 = [\"textContent\"];\nconst _hoisted_10 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_11 = [\"value\"];\nconst _hoisted_12 = [\"value\", \"isDeleting\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" heading \"), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" show all notifications \"), _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.notifications, notification => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: notification._id\n    }, [_createCommentVNode(\" show type of notification \"), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      textContent: _toDisplayString(notification.type)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), _hoisted_8, _createCommentVNode(\" if type is group invite, then we also show the name of group \"), notification.type == 'group_invite' ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      textContent: _toDisplayString(notification.group.name)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" a button to delete the notification \"), _createElementVNode(\"td\", _hoisted_10, [_createElementVNode(\"form\", {\n      onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.deleteNotification && $options.deleteNotification(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"input\", {\n      type: \"hidden\",\n      name: \"_id\",\n      value: notification._id,\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11), _createElementVNode(\"input\", {\n      type: \"submit\",\n      value: _ctx.isDeleting ? 'Deleting...' : 'Delete',\n      isDeleting: _ctx.disabled,\n      class: \"btn btn-danger\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12)], 32\n    /* HYDRATE_EVENTS */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])])]);\n}","map":{"version":3,"mappings":";;AACMA,OAAK,EAAC;AAAYC,OAAyB,EAAzB;AAAA;AAAA;;;gCAEtBC,oBAIS,KAJT,EAIS;AAJJF,OAAK,EAAC;AAIF,CAJT,EAAgB,cACTE,oBAEM,KAFN,EAEM;AAFDF,OAAK,EAAC;AAEL,CAFN,EAAsB,cAClBE,oBAA0C,IAA1C,EAA0C;AAAtCF,OAAK,EAAC;AAAgC,CAA1C,EAAwB,eAAxB,CADkB,CAAtB,CADS,CAAhB;;AAAA;;;AAMKA,OAAK,EAAC;;;AACLA,OAAK,EAAC;;;AAEHA,OAAK,EAAC;;;gCACZE,oBAKQ,OALR,EAKQ,IALR,EAKQ,cAJPA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFJA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEI,eADJA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CACI,CAHL,CAIO,CALR;;AAAA;;;;iDAW2C;;;;AASrCD,OAAsB,EAAtB;AAAA;AAAA;;;;;uBAhCVE,oBA2CM,KA3CN,cA2CM,CA1CLC,gCA0CK,EAzCLC,UAyCK,EAnCLH,oBAkCM,KAlCN,cAkCM,CAjCLA,oBAgCM,KAhCN,cAgCM,CA/BLE,+CA+BK,EA9BLF,oBA6BQ,OA7BR,cA6BQ,CA5BPI,UA4BO,EArBPJ,oBAoBQ,OApBR,EAoBQ,IApBR,EAoBQ,oBAnBPC,oBAkBKI,SAlBL,EAkBK,IAlBL,EAkBKC,YAlBsBC,sBAkBtB,EAlBMC,YAA6B,IAAjB;yBAAvBP,oBAkBK,IAlBL,EAkBK;AAlB4CQ,SAAG,EAAED,YAAY,CAACE;AAkB9D,KAlBL,GACCR,oDACAF,oBAOK,IAPL,EAOK,IAPL,EAOK,CANJA,oBAAwC,MAAxC,EAAwC;mBAAlCW,iBAAQH,YAAY,CAACI,IAArB;AAAkC,KAAxC;;AAAA,iBAMI,cAJJV,qFAII,EAHYM,YAAY,CAACI,IAAb,IAAiB,gCAChCX,oBAA8C,MAA9C,EAA8C;YAAA;mBAAxCU,iBAAQH,YAAY,CAACK,KAAb,CAAmBC,IAA3B;AAAwC,KAA9C;;AAAA,sDAEG,CAPL,GASAZ,8DACAF,oBAKK,IALL,eAKK,CAJJA,oBAGO,MAHP,EAGO;AAHIe,cAAM,wDAAUR,mEAAV,EAA4B,WAA5B;AAGV,KAHP,GACCP,oBAA2E,OAA3E,EAA2E;AAApEY,UAAI,EAAC,QAA+D;AAAtDE,UAAI,EAAC,KAAiD;AAApCE,WAAK,EAAER,YAAY,CAACE,GAAgB;AAAXO,cAAQ,EAAR;AAAW,KAA3E;;AAAA,oBACAjB,oBAAgI,OAAhI,EAAgI;AAAzHY,UAAI,EAAC,QAAoH;AAApGI,WAAK,EAAEE,kBAAU,aAAV,GAAU,QAAmF;AAA/CC,gBAAU,EAAED,aAAmC;AAAzBpB,WAAK,EAAC;AAAmB,KAAhI;;AAAA,mBAFD;;AAAA,KAII,CALL,EAZD;GAkBK,CAlBL;;AAAA,GAmBO,EApBR,CAqBO,CA7BR,CA8BK,CAhCN,CAiCK,CAlCN,CAmCK,CA3CN","names":["class","style","_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_2","_hoisted_6","_Fragment","_renderList","$options","notification","key","_id","_toDisplayString","type","group","name","onSubmit","value","required","_ctx","isDeleting"],"sourceRoot":"","sources":["D:\\Download\\Compressed\\chat\\web\\src\\components\\NotificationsComponent.vue"],"sourcesContent":["<template>\n\t<div class=\"container\" style=\"margin-top: 50px;\">\n\t\t<!-- heading -->\n\t\t<div class=\"row\">\n\t        <div class=\"col-md-12\">\n\t            <h1 class=\"text-center\">Notifications</h1>\n\t        </div>\n\t    </div>\n\t    \n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<!-- show all notifications -->\n\t\t\t\t<table class=\"table table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr v-for=\"notification in notifications\" v-bind:key=\"notification._id\">\n\t\t\t\t\t\t\t<!-- show type of notification -->\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span v-text=\"notification.type\"></span>&nbsp;\n\n\t\t\t\t\t\t\t\t<!-- if type is group invite, then we also show the name of group -->\n\t\t\t\t\t\t\t\t<template v-if=\"notification.type == 'group_invite'\">\n\t\t\t\t\t\t\t\t\t<span v-text=\"notification.group.name\"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t<!-- a button to delete the notification -->\n\t\t\t\t\t\t\t<td style=\"display: flex;\">\n\t\t\t\t\t\t\t\t<form v-on:submit.prevent=\"deleteNotification\">\n\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"_id\" v-bind:value=\"notification._id\" required />\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" v-bind:value=\"isDeleting ? 'Deleting...' : 'Delete'\" v-bind:isDeleting=\"disabled\" class=\"btn btn-danger\" />\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\n\timport axios from \"axios\"\n\timport swal from \"sweetalert2\"\n\timport store from \"../vuex/store\"\n\n\texport default {\n\n\t\tdate() {\n\t\t\treturn {\n\t\t\t\tisDeleting: false\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\t// method to mark all notifications as read\n\t\t\tmarkAsRead: async function () {\n\t\t\t\tconst response = await axios.post(\n\t\t\t\t\tthis.$apiURL + \"/markNotificationsAsRead\",\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: this.$headers\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tif (response.data.status == \"success\") {\n\t\t\t\t\t// update in local array\n\t\t\t\t\tconst tempNotifications = store.getters.getNotifications\n\t\t\t\t\tfor (let a = 0; a < tempNotifications.length; a++) {\n\t\t\t\t\t\ttempNotifications[a].isRead = true\n\t\t\t\t\t}\n\t\t\t\t\tstore.commit(\"setNotifications\", tempNotifications)\n\n\t\t\t\t\t// set the unread notifications to zero\n\t\t\t\t\tstore.commit(\"setUnreadNotifications\", 0)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// method to delete the notification\n\t\t\tdeleteNotification: async function () {\n\t\t\t\tconst form = event.target\n\t\t\t\tconst _id = form._id.value\n\t\t\t\tconst formData = new FormData(form)\n\n\t\t\t\tthis.isDeleting = true\n\n\t\t\t\tconst response = await axios.post(\n\t\t\t\t\tthis.$apiURL + \"/deleteNotification\",\n\t\t\t\t\tformData,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: this.$headers\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tthis.isDeleting = false\n\n\t\t\t\tif (response.data.status == \"success\") {\n\t\t\t\t\t// remove from local array\n\t\t\t\t\tconst tempNotifications = store.getters.getNotifications\n\t\t\t\t\tfor (let a = 0; a < tempNotifications.length; a++) {\n\t\t\t\t\t\tif (tempNotifications[a]._id == _id) {\n\t\t\t\t\t\t\ttempNotifications.splice(a, 1)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstore.commit(\"setNotifications\", tempNotifications)\n\t\t\t\t} else {\n\t\t\t\t\tswal.fire(\"Error\", response.data.message, \"error\");\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\n\t\t// on page loaded, mark all notifications as read\n\t\tmounted: function () {\n\t\t\tthis.markAsRead()\n\t\t},\n\n\t\t// create computed property for all notifications\n\t    computed: {\n\t\t\tnotifications() {\n\t\t\t\treturn store.getters.getNotifications.reverse()\n\t\t\t}\n\t\t}\n\t}\n</script>"]},"metadata":{},"sourceType":"module"}