{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nexport default {\n  data() {\n    return {\n      \"isLoading\": false\n    };\n  },\n\n  methods: {\n    doLogin: async function () {\n      const self = this;\n      const form = event.target;\n      const formData = new FormData(form);\n      this.isLoading = true;\n      const response = await axios.post(this.$apiURL + \"/login\", formData);\n\n      if (response.data.status == \"success\") {\n        var accessToken = response.data.accessToken;\n        localStorage.setItem(this.$accessTokenKey, accessToken);\n        setTimeout(function () {\n          window.location.href = \"/\";\n        }, 500);\n        form.reset();\n      } else {\n        this.isLoading = false;\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkCI,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe;AACXC,MAAI,GAAG;AACH,WAAO;AACH,mBAAa;AADV,KAAP;AAGH,GALU;;AAOXC,SAAO,EAAE;AACLC,WAAO,EAAE,kBAAkB;AACvB,YAAMC,IAAG,GAAI,IAAb;AACA,YAAMC,IAAG,GAAIC,KAAK,CAACC,MAAnB;AACA,YAAMC,QAAO,GAAI,IAAIC,QAAJ,CAAaJ,IAAb,CAAjB;AAEA,WAAKK,SAAL,GAAiB,IAAjB;AAEA,YAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAN,CACnB,KAAKC,OAAL,GAAe,QADI,EAEnBL,QAFmB,CAAvB;;AAKA,UAAIG,QAAQ,CAACV,IAAT,CAAca,MAAd,IAAwB,SAA5B,EAAuC;AACnC,YAAIC,WAAU,GAAIJ,QAAQ,CAACV,IAAT,CAAcc,WAAhC;AACAC,oBAAY,CAACC,OAAb,CAAqB,KAAKC,eAA1B,EAA2CH,WAA3C;AAEAI,kBAAU,CAAC,YAAY;AACnBC,gBAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH,SAFS,EAEP,GAFO,CAAV;AAIAjB,YAAI,CAACkB,KAAL;AACJ,OATA,MASO;AACH,aAAKb,SAAL,GAAiB,KAAjB;AACAV,YAAI,CAACwB,IAAL,CAAU,OAAV,EAAmBb,QAAQ,CAACV,IAAT,CAAcwB,OAAjC,EAA0C,OAA1C;AACJ;AACJ;AA1BK;AAPE,CAAf","names":["axios","swal","data","methods","doLogin","self","form","event","target","formData","FormData","isLoading","response","post","$apiURL","status","accessToken","localStorage","setItem","$accessTokenKey","setTimeout","window","location","href","reset","fire","message"],"sourceRoot":"","sources":["D:\\Download\\Compressed\\chat\\web\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container\" style=\"margin-top: 50px;\">\n        <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n                <h1>Login</h1>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"offset-md-3 col-md-6\">\n                <form method=\"POST\" v-on:submit.prevent=\"doLogin\">\n                    <div class=\"form-group\">\n                        <label>Enter email</label>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" required />\n                    </div>\n\n                    <br />\n\n                    <div class=\"form-group\">\n                        <label>Enter password</label>\n                        <input type=\"password\" class=\"form-control\" name=\"password\" required />\n                    </div>\n\n                    <br />\n\n                    <input type=\"submit\" v-bind:value=\"isLoading ? 'Loading...' : 'Login'\" v-bind:disabled=\"isLoading\" name=\"submit\" class=\"btn btn-primary\" />\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n\n    export default {\n        data() {\n            return {\n                \"isLoading\": false\n            };\n        },\n\n        methods: {\n            doLogin: async function () {\n                const self = this\n                const form = event.target\n                const formData = new FormData(form)\n\n                this.isLoading = true;\n\n                const response = await axios.post(\n                    this.$apiURL + \"/login\",\n                    formData\n                );\n\n                if (response.data.status == \"success\") {\n                    var accessToken = response.data.accessToken;\n                    localStorage.setItem(this.$accessTokenKey, accessToken)\n\n                    setTimeout(function () {\n                        window.location.href = \"/\"\n                    }, 500);\n\n                    form.reset()\n                } else {\n                    this.isLoading = false;\n                    swal.fire(\"Error\", response.data.message, \"error\");\n                }\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}